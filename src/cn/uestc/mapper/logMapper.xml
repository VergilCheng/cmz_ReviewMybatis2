<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.uestc.mapper.logMapper">

    <!--日志插入-->
    <insert id="insertLog" parameterType="Log">
        insert into log values (default ,#{acconOut},#{acconIn},#{balance});
    </insert>

    <!--查询总条数-->
    <select id="selCount" resultType="long">
        select count(*) from  log;
    </select>


    <!--查询全部-->
    <select id="selectAllLogs" resultType="Log">
        select * from log;
    </select>

    <!--分页查询-->
    <select id="selectPage"
            parameterType="map"
            resultType="Log">
        select * from log limit #{pageStart},#{pageSize};
    </select>

    <!--当多参数注入查询，不需要写parameterType
        但是需要注意，#{}中必须写索引0,1,2...或者param1，param2.....
        如果非要写参数名称，需要使用@param注解
        @param注解要求注解中的值与#{}括号内的值相同，与接口方法中的参数名称没有关系！！！-->
    <select id="selectByAccInAccoutId" resultType="Log">
        select * from log where  acconOut=#{accout} and acconIn=#{accin} and id=#{id};
    </select>

    <!--动态sql,测试if和where标签-->
    <select id="selectByAccInAccout" resultType="Log">
            select
            *
            from log
            <where>
            <!--OGLN表达式,不像spring表达式或者JSTL，直接写key或者对象属性，或者@Param注释更改的名称，不需要添加任何特殊字符号-->
                <if test="accout!=null and accout!=''">
                acconOut=#{accout}
                </if>
                <if test="accin!=null and accin!=''">
                and acconIn=#{accin}
                </if>
            </where>
    </select>

    <!--测试动态sql，测试foreach
        foreach适用于insert批量新增和where in查询
        虽然insert批量新增效率高，但是foreach效率低
        反而不如insert不使用批量新增插入，但是jdbc的
        批量新增效率更高

    -->
    <select id="selectByIds" resultType="Log">
        select *
        from log
        where id in 
        <foreach item='item' index="index" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <!--测试动态sql，测试set标签-->
    <update id="updateLog" parameterType="Log">
      update log
      <set>
          <!--这里写一个id=id防止我们log对象什么都没有，会有有语法错误-->
          id=#{id},
          <if test="acconOut!=null and acconOut!=''">acconOut=#{acconOut},</if>
          <if test="acconIn!=null and acconIn!=''">acconIn=#{acconIn},</if>
          <if test="balance!=null and balance!=''">balance=#{balance},</if>
      </set>
        where id = #{id};
    </update>

    <!--批量新增,运用foreach
        同时运用trim标签去掉多余的后缀','-->
    <insert id="insertAll" parameterType="list">
        <trim suffixOverrides=",">
            insert into log values
            <foreach collection="list" item="log">
                (default ,#{log},2.2),
            </foreach>
        </trim>
    </insert>

    <!--某些 SQL 片段如果希望复用,可以使用<sql>定义这个片段-->
    <sql id="logColumns">id,acconOut,acconIn,balance</sql>
    <select id="selectColumns">
        select <include refid="mysql"></include>
        from log
    </select>
</mapper>